---
version: 1.0.x.{build}
clone_depth: 10
install:
  - ps: |
      $ErrorActionPreference = "Stop"
      & .\extras\install.ps1
      if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }
configuration:
  - unit
  - general
  - acceptance-forge
  - acceptance-github
build: off
environment:
  PDK_DISABLE_ANALYTICS: 'true'
for:
  -
    matrix:
      only:
        - configuration: unit
    test_script:
      - ps: |
          $ErrorActionPreference = "Stop"
          Import-Module .\src\puppet.dsc.psd1
          $testResultsFile = ".\AcceptanceTestsResults.xml"
          $TestPath = @(
            (Resolve-Path .\src\functions)
            (Resolve-Path .\src\internal\functions)
          )
          $Results = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru -Path $TestPath
          (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
          if ($Results.FailedCount -gt 0) {
            throw "$($Results.FailedCount) tests failed."
          }
  -
    matrix:
      only:
        - configuration: general
    test_script:
      - ps: |
          $ErrorActionPreference = "Stop"
          Import-Module .\src\puppet.dsc.psd1
          $testResultsFile = ".\AcceptanceTestsResults.xml"
          $TestPath = @(
            (Resolve-Path .\src\tests\general)
          )
          $Results = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru -Path $TestPath
          (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
          if ($Results.FailedCount -gt 0) {
            throw "$($Results.FailedCount) tests failed."
          }
  -
    matrix:
      only:
        - configuration: acceptance-forge
    install:
      - ps: |
          $ErrorActionPreference = "Stop"
          & .\extras\install.ps1 -Full
          if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }
    test_script:
      - ps: |
          $ErrorActionPreference = "Stop"
          Import-Module .\src\puppet.dsc.psd1

          $testResultsFile = ".\AcceptanceTestsResults.xml"
          $TestPath = @(
            (Resolve-Path .\Acceptance.Tests.ps1)
          )

          $container = New-PesterContainer -Path $TestPath -Data @{ FixtureHash = @{
            Section = 'forge_modules'
            Repo    = 'pupptlabs/pwshlib'
          } }
          $Results = Invoke-Pester -Container $container -PassThru -Output Detailed
          $Results | ConvertTo-NunitReport -AsString | Out-File $testResultsFile

          (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
          if ($Results.FailedCount -gt 0) {
            throw "$($Results.FailedCount) tests failed."
          }
  -
    matrix:
      only:
        - configuration: acceptance-github
    install:
      - ps: |
          $ErrorActionPreference = "Stop"
          & .\extras\install.ps1 -Full
          if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }
    test_script:
      - ps: |
          $ErrorActionPreference = "Stop"
          Import-Module .\src\puppet.dsc.psd1

          $testResultsFile = ".\AcceptanceTestsResults.xml"
          $TestPath = @(
            (Resolve-Path .\Acceptance.Tests.ps1)
          )

          $container = New-PesterContainer -Path $TestPath -Data @{ FixtureHash = @{
            Section = 'repositories'
            Repo    = 'git://github.com/puppetlabs/ruby-pwsh.git'
            Branch  = 'main'
          } }
          $Results = Invoke-Pester -Container $container -PassThru -Output Detailed
          $Results | ConvertTo-NunitReport -AsString | Out-File $testResultsFile

          (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
          if ($Results.FailedCount -gt 0) {
            throw "$($Results.FailedCount) tests failed."
          }

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false
